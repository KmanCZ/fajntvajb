services:
  server:
    build: .
    ports:
      - "8080:8080"
    environment:
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=database
      - DB_SSL=disable
      - DB_HOST=db
      - DB_PORT=5432
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ENDPOINT=http://localstack:4566
      - SESSION_KEY=Zh4Bd3drj9s9tQWYwxaHj5XHCiCEkfMH
      #- SEED=true # Uncomment to seed the database
                   # WARNING: This will drop the database and recreate it
    depends_on:
      db:
        condition: service_healthy
      localstack:
        condition: service_started
  db:
    image: postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=database
    ports:
      - "5432:5432"
    hostname: db
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d database -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    image: localstack/localstack:s3-latest
    hostname: localstack
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      - DEBUG=${DEBUG:-0}
      - LOCALSTACK_HOST=localstack
      - PERSISTENCE=1
    volumes:
      - localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

volumes:
  localstack:
  pgdata:
